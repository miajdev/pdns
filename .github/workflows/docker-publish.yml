name: Build & Publish (GHCR)

on:
  push:
    branches: ["main"]
    tags: ["v*", "V*"]        # vX.Y.Z -> 5, 5.0, 5.0.0
  workflow_dispatch:

env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}
  DEFAULT_PDNS_VERSION: "5.0.0"

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write          # required to push to GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Resolve PowerDNS version
        id: ver
        run: |
          ref="${GITHUB_REF##*/}"
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "ver=${ref#[vV]}" >> "$GITHUB_OUTPUT"
          else
            echo "ver=${DEFAULT_PDNS_VERSION}" >> "$GITHUB_OUTPUT"
          fi

      - name: Docker metadata (GHCR)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.GHCR_IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=${{ steps.ver.outputs.ver }},enable=${{ startsWith(github.ref,'refs/tags/') }}
            type=semver,pattern={{major}},value=${{ steps.ver.outputs.ver }},enable=${{ startsWith(github.ref,'refs/tags/') }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.ver.outputs.ver }},enable=${{ startsWith(github.ref,'refs/tags/') }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build & push (GHCR)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: |
            POWERDNS_VERSION=${{ steps.ver.outputs.ver }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
